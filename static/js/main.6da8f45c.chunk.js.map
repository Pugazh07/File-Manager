{"version":3,"sources":["components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","store/action.js","components/UI/Input/Input.js","components/TreeNode/TreeNode.js","components/Tree/Tree.js","components/Header/Search/Search.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Header/HandleFolderFile/HandleFolderFile.js","components/Header/Header.js","components/SearchResult/SearchResult.js","components/SelectedContent/SelectedContent.js","container/fileManager/fileManager.js","components/FontawsomeIcons/index.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["module","exports","SELECTPATH","ADDITEM","SAVEITEM","CANCELITEM","DELETEITEM","RENAMEITEM","SEARCHITEMS","Input","props","useState","value","istouched","inputElementConfig","setInputElementConfig","console","log","type","className","autoFocus","onFocus","e","stopPropagation","currentTarget","select","onChange","onBlur","addItem","onSaveItem","onCancelItem","onClick","onKeyDown","key","size","TreeNode","node","onSelectPath","selectedPath","childVisible","setChildVisiblity","useSelector","state","dispatch","useDispatch","itemName","actionTypes","name","hasChild","children","icon","path","parent","dirCount","fileCount","onDoubleClick","renameItem","target","inputValue","length","data","Tree","map","tree","Search","searchKey","setSearchKey","placeholder","onKeyUp","onSearchItems","toLowerCase","backdrop","show","styles","Backdrop","clicked","modal","content","pathToDelete","footer","Cancel","closeModal","Confirm","conditional","modalContent","Fragment","Modal","style","transform","opacity","connect","root","selectedPathType","onAddItem","itemType","onDeleteItem","onRenameItem","choosenFile","file","modalVisiblity","setModalVisiblity","enable","chooseFile","setChooseFile","closeModalHandler","confirmation","error","disabled","event","files","reader","FileReader","readAsDataURL","onload","result","onChangeHandler","Header","SearchResult","item","selectedContent","FileManager","this","searchResultList","searchResult","Component","expand","origin","pathParent","pathType","library","add","faCaretRight","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","selectedPathParent","selectedPathDirCount","selectedPathFileCount","reducer","action","selectPath","child","downloadOption","index","findIndex","ele","pathKeys","i","split","slice","selectedFrom","deleteItem","filter","JSON","parse","stringify","targetFolder","updateItem","pathKey","duplicateError","j","saveItem","concat","date","sort","a","b","searchItem","indexOf","push","forEach","element","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6da8f45c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__F-sqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__neTCb\"};","export const SELECTPATH=\"SELECTPATH\";\r\nexport const ADDITEM=\"ADDITEM\";\r\nexport const SAVEITEM=\"SAVEITEM\";\r\nexport const CANCELITEM=\"CANCELITEM\";\r\nexport const DELETEITEM=\"DELETEITEM\";\r\nexport const RENAMEITEM=\"RENAMEITEM\";\r\nexport const SEARCHITEMS=\"SEARCHITEMS\";","import React, { useState } from 'react';\r\n\r\nconst Input = (props) =>{\r\n    const [inputElementConfig, setInputElementConfig]=useState({\r\n        value: null,\r\n        istouched: false\r\n      });\r\n    console.log(props)\r\n    return(\r\n        <input\r\n                  type={props.type}\r\n                  className={props.className}\r\n                  value={inputElementConfig.istouched ? inputElementConfig.value : props.value}\r\n                  autoFocus={props.autoFocus}\r\n                  onFocus={(e)=> {\r\n                    e.stopPropagation();\r\n                    e.currentTarget.select();\r\n                  }}\r\n                  onChange={(e)=>{\r\n                    setInputElementConfig({value: e.currentTarget.value, istouched: true})\r\n                  }}\r\n                  onBlur={(e)=>{\r\n                    e.stopPropagation();\r\n                    if(e.currentTarget.value !== props.value || props.addItem){\r\n                      props.onSaveItem(e.currentTarget.value)\r\n                    }\r\n                    else\r\n                    {\r\n                      props.onCancelItem()\r\n                    }\r\n                    setInputElementConfig({value: null, istouched: false})\r\n                  }}\r\n                  onClick={(e)=>{\r\n                      e.stopPropagation();\r\n                  }}\r\n                  onKeyDown={(e)=>{\r\n                    e.stopPropagation();\r\n                    switch (e.key){\r\n                      case \"Enter\":\r\n                        if(e.currentTarget.value !== props.value || props.addItem){\r\n                          props.onSaveItem(e.currentTarget.value)\r\n                        }\r\n                        else{\r\n                            props.onCancelItem()\r\n                        }\r\n                        setInputElementConfig({value: null, istouched: false})\r\n                        break\r\n                      case \"Escape\":\r\n                        props.onCancelItem()\r\n                        setInputElementConfig({value: null, istouched: false})\r\n                        break\r\n                      default:\r\n                        break\r\n                    }\r\n                  }}\r\n                  size={props.size}/>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect, useSelector, useDispatch } from 'react-redux'\r\n\r\nimport * as actionTypes from '../../store/action'\r\nimport Tree from '../Tree/Tree';\r\nimport Input from '../UI/Input/Input';\r\n\r\nconst TreeNode = ({node, onSelectPath, selectedPath}) =>{\r\n    // if(addItem.target === node.path) console.log(\"[Tree.js addItem]\",addItem)\r\n    const [childVisible, setChildVisiblity]=useState(false);    \r\n    // const [inputElementConfig, setInputElementConfig]=useState({\r\n    //   value: null,\r\n    //   istouched: false\r\n    // });\r\n    const addItem=useSelector((state)=> state.addItem)\r\n    const dispatch=useDispatch()\r\n    const onSaveItem=(itemName)=> dispatch({type: actionTypes.SAVEITEM, value: {name: itemName }})\r\n    const onCancelItem=()=>dispatch({type: actionTypes.CANCELITEM})\r\n    const hasChild = node.children ? true : false;\r\n    return (\r\n        <li className=\"TreeNode\" >\r\n          <div >\r\n            {hasChild && (\r\n              <div\r\n                className={`NodeToggler ${\r\n                  childVisible ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <FontAwesomeIcon onClick={() => {setChildVisiblity(!childVisible)}} icon=\"caret-right\" />\r\n              </div>\r\n            )}\r\n    \r\n            <span\r\n            className={selectedPath === node.path ? \"active\" : null}\r\n            onClick={(e)=>{\r\n                e.stopPropagation()\r\n                \r\n                onSelectPath(node.path, node.parent, node.type, node.dirCount, node.fileCount, true, 'tree')}}\r\n            onDoubleClick={(e) => {\r\n              e.stopPropagation();\r\n              setChildVisiblity(!childVisible)}}>\r\n              <i className={`mr-1 ${node.type === 'application/directory' ? \"fa fa-folder\" : \"fa fa-file\"}`}></i>\r\n              {!(addItem.renameItem && selectedPath === node.path) ? node.name : (\r\n                <Input\r\n                  type='text'\r\n                  value={node.name}\r\n                  autoFocus={true}\r\n                  size={4}\r\n                  onSaveItem={onSaveItem}\r\n                  onCancelItem={onCancelItem}/>\r\n                  )}\r\n\r\n            </span>\r\n          </div>\r\n\r\n          {addItem.type === 'application/directory' && node.path === addItem.target && <Input\r\n            type=\"text\"\r\n            className=\"Input\"\r\n            value={addItem.inputValue}\r\n            autoFocus={true}\r\n            addItem={addItem}\r\n            size={3}\r\n            onSaveItem={onSaveItem}\r\n            onCancelItem={onCancelItem}/>}\r\n\r\n          {hasChild && node.children.length > 0 && childVisible && (\r\n              <ul className=\"TreeContainer\">\r\n                <Tree data={node.children} onSelectPath={onSelectPath} selectedPath={selectedPath}/>\r\n              </ul>\r\n          )}\r\n        </li>\r\n      );\r\n\r\n    }\r\n\r\n/* const mapStateToProps = state => {\r\n  return {\r\n    addItem: state.addItem,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    onSaveItem: (itemName)=>dispatch({type: actionTypes.SAVEITEM, value: {name: itemName }}),\r\n    onCancelItem: ()=>dispatch({type: actionTypes.CANCELITEM})\r\n  }\r\n} */\r\n// export default connect(mapStateToProps,mapDispatchToProps)(TreeNode);\r\nexport default TreeNode;","import React from 'react';\r\n\r\nimport TreeNode from '../TreeNode/TreeNode'\r\nimport './Tree.css';\r\n\r\nconst Tree = ({data=[], onSelectPath, selectedPath}) => {\r\n    // console.log(\"[Tree.js data]\",selectedPath.split(\"/\"))\r\n    return <ul className=\"TreeContainer\">\r\n            {data.map(tree => (\r\n                <TreeNode\r\n                key={tree.path}\r\n                node={tree}\r\n                onSelectPath={onSelectPath}\r\n                selectedPath={selectedPath}/>\r\n            ))}\r\n        </ul>\r\n}\r\n\r\nexport default Tree;","import React, { useState } from 'react';\r\n\r\nimport './Search.css';\r\n\r\nconst Search = (props) => {\r\n    const [searchKey, setSearchKey] = useState('');\r\n    return(\r\n        <div className=\"Search\">\r\n            <div className=\"SearchBar\">\r\n                <input\r\n                className=\"SearchInput\"\r\n                value={searchKey}\r\n                placeholder=\"Search\"\r\n                onFocus={(e)=>{e.currentTarget.select()}}\r\n                onChange={\r\n                    (e)=>{\r\n                        setSearchKey(e.target.value)\r\n                    }\r\n                }\r\n                onKeyUp={(e)=>{\r\n                    e.stopPropagation();\r\n                    switch (e.key){\r\n                      case \"Enter\":\r\n                        props.onSearchItems(searchKey.toLowerCase())\r\n                        break\r\n                      default:\r\n                        break\r\n                    }\r\n                  }}\r\n                />\r\n                <span className=\"SearchIcon\" onClick={searchKey ? ()=>{props.onSearchItems(searchKey.toLowerCase())} : null}>\r\n                    <i className=\"fa fa-search\"></i>\r\n                </span>\r\n            </div>\r\n            \r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={styles.Backdrop} onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\n const modal = (props) => {\r\n     console.log(\"[Modal.js] props\", styles)\r\n     let content=<section>Are you sure to remove \"{props.pathToDelete}\"</section>\r\n     let footer = (<footer>\r\n        <button className={styles.Cancel} onClick={(e) => props.closeModal(e, false)}>\r\n        Cancel\r\n    </button>\r\n    <button className={styles.Confirm} onClick={(e) => props.closeModal(e, true)}>\r\n        Proceed\r\n    </button>\r\n    </footer>)\r\n     \r\n     if(!props.pathToDelete || props.pathToDelete === \"root\"){\r\n         if(!props.conditional){\r\n            footer = <footer>\r\n            <button className={styles.Cancel} onClick={(e) => props.closeModal(e, false)}>\r\n                Ok\r\n           </button>\r\n           </footer>\r\n         }\r\n        content = props.pathToDelete === \"root\" ? <section>\"root\" folder can't be removed</section> : <section>{props.modalContent}</section>\r\n     }\r\n      \r\n        return(\r\n            <React.Fragment>\r\n                <Backdrop show={props.show} clicked={(e)=>props.closeModal(e, false)} />\r\n                <div \r\n                className={styles.Modal}\r\n                style={{transform: props.show ? 'translateY(0)' : 'translateY(100vh)',\r\n                opacity: props.show ? '1' : '0'}}>\r\n                    <header>Alert</header>\r\n                    {content}\r\n                    {footer}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n}\r\n\r\nexport default modal;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './HandleFolderFile.css';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport * as actionTypes from '../../../store/action';\r\n\r\n// import DeleteFolderFile from '../DeleteFolderFile/DeleteFolderFile';\r\n\r\nconst HandleFolderFile = (props) => {\r\n    const [modalVisiblity, setModalVisiblity]=useState(false);\r\n    const [chooseFile, setChooseFile]=useState({\r\n        enable: false,\r\n        choosenFile: null\r\n    });\r\n    const modalContent = \"Please select a path\";\r\n    console.log(chooseFile.choosenFile)\r\n    const openModalHandler = (event) => {\r\n        event.stopPropagation();\r\n        setModalVisiblity(true)\r\n    }\r\n    const closeModalHandler = (e, confirmation) =>{\r\n        e.stopPropagation();\r\n        if(modalVisiblity){\r\n            if(confirmation === true){\r\n                props.onDeleteItem()\r\n            }\r\n            setModalVisiblity(false)\r\n        }\r\n        else if(props.addItem.error){\r\n            props.onCancelItem()\r\n        }\r\n        else if(chooseFile.enable){\r\n            if(chooseFile.choosenFile && confirmation === true){\r\n                props.onSaveItem(chooseFile.choosenFile)\r\n            }\r\n            setChooseFile({\r\n                enable: false,\r\n                choosenFile: null\r\n            })\r\n        }\r\n    }\r\n    const onChangeHandler = (e) =>{\r\n        e.stopPropagation();\r\n        let files = e.target.files;\r\n        props.onAddItem(\"application/file\")\r\n        // console.log(files[0])\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(files[0])\r\n        reader.onload = (e) => {\r\n            // console.log(\"file data\", e.target.result)\r\n            setChooseFile({enable: chooseFile.enable, choosenFile: {\r\n                file: files[0],\r\n                data: e.target.result\r\n            }})\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <div className=\"HandleFolderFile\">\r\n            <button className=\"button\" disabled={!props.selectedPath || props.selectedPath===props.root.path} onClick={()=>props.onRenameItem(props.selectedPathType)}>\r\n                Rename\r\n            </button>\r\n            <button className=\"button\" disabled={!props.selectedPath || props.selectedPathType===\"application/file\"} onClick={()=>{props.onAddItem(\"application/directory\")}}>\r\n                Add Folder\r\n            </button>\r\n            {/* <button className=\"button\" disabled={!props.selectedPath || props.selectedPathType===\"application/file\"} onClick={()=>{props.onAddItem(\"application/file\")}}>\r\n                Add File\r\n            </button> */}\r\n            <button className=\"button\" disabled={!props.selectedPath || props.selectedPathType===\"application/file\"}\r\n            onClick={()=>{\r\n                // props.onAddItem(\"application/file\")\r\n                setChooseFile({\r\n                    enable: true,\r\n                    choosenFile: chooseFile.choosenFile\r\n                })\r\n            }}>\r\n                Add File\r\n            </button>\r\n            <button className=\"DeleteFolderFile button\" disabled={!props.selectedPath || props.selectedPath===props.root.path} onClick={openModalHandler}>\r\n                Delete\r\n            </button>\r\n            {/* <DeleteFolderFile openModal={openModalHandler}/> */}\r\n            {modalVisiblity ? <Modal\r\n                                show={modalVisiblity}\r\n                                conditional={true}\r\n                                modalContent={modalContent}\r\n                                pathToDelete={props.selectedPath}\r\n                                closeModal={closeModalHandler}/> : null}\r\n            {props.addItem.error ? <Modal\r\n                                show={props.addItem.error}\r\n                                conditional={false}\r\n                                modalContent={props.addItem.error}\r\n                                pathToDelete={null}\r\n                                closeModal={closeModalHandler}/> : null}\r\n            {chooseFile.enable ? <Modal\r\n                        show={chooseFile.enable}\r\n                        conditional={true}\r\n                        modalContent={<input type='file' name='file' onChange={(e)=>onChangeHandler(e)}/>}\r\n                        closeModal={closeModalHandler}/> : null}\r\n            {/* {chooseFile.enable ? <dialog open>\r\n                <p>dialog</p>\r\n            </dialog> : null} */}\r\n        </div>\r\n    )   \r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        root: state.root[0],\r\n        selectedPath: state.selectedPath,\r\n        selectedPathType: state.selectedPathType,\r\n        addItem: state.addItem\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onAddItem: (itemType) => dispatch({type: actionTypes.ADDITEM, value: itemType}),\r\n        onDeleteItem: () => dispatch({type: actionTypes.DELETEITEM}),\r\n        onRenameItem: (itemType) => dispatch({type: actionTypes.RENAMEITEM, value: itemType}),\r\n        onCancelItem: () => dispatch({type: actionTypes.CANCELITEM}),\r\n        onSaveItem: (choosenFile) =>dispatch({type: actionTypes.SAVEITEM , value: {name: choosenFile.file.name, choosenFile: choosenFile} })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HandleFolderFile);","import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nimport Search from './Search/Search';\r\nimport HandleFolderFile from './HandleFolderFile/HandleFolderFile';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"Header\">\r\n            <Search onSearchItems={props.onSearchItems}/>\r\n            <HandleFolderFile/>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './SearchResult.css'\r\n\r\nconst SearchResult = (props) =>{\r\n    console.log(props)\r\n    return(<div className=\"SearchResult\">\r\n        {props.item.path}\r\n    </div>)\r\n}\r\n\r\nexport default SearchResult;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionTypes from '../../store/action'\r\nimport './SelectedContent.css';\r\n\r\nconst SelectedContent = (props) =>{\r\n    console.log(props.selectedContent)\r\n    return<div className=\"SelectedContent\">\r\n        <section className=\"SelectedItem SelectedContentHeader\">\r\n            <div>\r\n                Name\r\n            </div>\r\n            <div>\r\n                Type\r\n            </div>\r\n            <div>\r\n                Size\r\n            </div>\r\n        </section>\r\n        <section>\r\n            {props.selectedContent.map(item =>{\r\n                return(\r\n                        <section\r\n                    className={`SelectedItem SelectedItemContent ${props.selectedPath === item.path ? 'active' : null}`}\r\n                    key={item.path}\r\n                        >\r\n                        <div>\r\n                        <i className={`mr-1 ${item.type === 'application/directory' ? \"fa fa-folder\" : \"fa fa-file\"}`}></i>\r\n                        {item.name}\r\n                        </div>\r\n                        <div>\r\n                            {item.type}\r\n                        </div>\r\n                        <div>\r\n                            {item.size}\r\n                        </div>\r\n                    </section>\r\n                )\r\n            })}\r\n            \r\n        </section>\r\n        <section>\r\n            \r\n        </section>\r\n        {/* <FontAwesomeIcon icon=\"download\" /> */}\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      addItem: state.addItem,\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch =>{\r\n    return{\r\n      onSaveItem: (itemName)=>dispatch({type: actionTypes.SAVEITEM, value: {name: itemName }}),\r\n      onCancelItem: ()=>dispatch({type: actionTypes.CANCELITEM})\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SelectedContent);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionTypes from '../../store/action'\r\n\r\nimport Tree from '../../components/Tree/Tree';\r\nimport Header from '../../components/Header/Header';\r\nimport SearchResult from '../../components/SearchResult/SearchResult';\r\n\r\nimport './fileManager.css';\r\nimport SelectedContent from '../../components/SelectedContent/SelectedContent';\r\n\r\nclass FileManager extends Component {\r\n    render(){\r\n        let selectedContent = this.props.selectedPath ? <p>Selected path: {this.props.selectedPath}</p> : \"Please select a folder/file\";\r\n        let searchResultList = null;\r\n        console.log(this.props)\r\n        // if(this.state.selectedContent){\r\n        //     sel\r\n        // }\r\n        if(this.props.searchResult){\r\n            searchResultList = this.props.searchResult.length > 0 ? this.props.searchResult.map( result => (\r\n                <SearchResult key={result.path} item={result}/>\r\n            )) : \"No results Found\";\r\n        }\r\n        return <div className=\"FileManager\">\r\n            <section>\r\n                <Header onSearchItems={this.props.onSearchItems}/>\r\n            </section>\r\n            <div className=\"Container\">\r\n            <section\r\n            className=\"TreeView\"\r\n            /* onClick={(e) => {\r\n                this.props.onSelectPath(null)}} */\r\n                >\r\n                <Tree data={this.props.root} onSelectPath={this.props.onSelectPath} selectedPath={this.props.selectedPath}/>\r\n            </section>\r\n            <section className=\"Content\">\r\n                {/* <Route path={this.props.selectedPath} render={()=>selectedContent} /> */}\r\n                {selectedContent}\r\n                {searchResultList && <div>\r\n                    {/* <Route path='/search' render={() =>searchResultList} /> */}\r\n                    <h1>Search result</h1>\r\n                    {searchResultList}\r\n                </div>}\r\n                {this.props.selectedContent && <SelectedContent\r\n                                            selectedContent={this.props.selectedContent}\r\n                                            selectedPath={this.props.selectedPath}\r\n                                            onSelectPath={this.props.onSelectPath}/>}\r\n            </section>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        root: state.root,\r\n        selectedPath: state.selectedPath,\r\n        searchResult: state.searchResult,\r\n        selectedContent: state.selectedContent,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onSelectPath: (path, parent, type, dirCount, fileCount, expand, origin) => dispatch(\r\n            {\r\n                type: actionTypes.SELECTPATH,\r\n                value: {path: path, pathParent: parent, pathType: type, dirCount: dirCount, fileCount: fileCount, expand: expand, origin: origin}\r\n            }),\r\n        onSearchItems: (searchKey) => dispatch({type: actionTypes.SEARCHITEMS, value: searchKey}),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FileManager)","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  /* faUser,\r\n  faEnvelope,\r\n  faLock,\r\n  faEye,\r\n  faEyeSlash,\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faExpand,\r\n  faCompress,\r\n  faBolt,\r\n  faSpinner,\r\n  faSort,\r\n  faSortUp,\r\n  faSortDown,\r\n  faMoon,\r\n  faChevronRight,\r\n  faGlobe, */\r\n  faCaretRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n  /* faUser,\r\n  faEnvelope,\r\n  faLock,\r\n  faEye,\r\n  faEyeSlash,\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faExpand,\r\n  faCompress,\r\n  faBolt,\r\n  faSpinner,\r\n  faSort,\r\n  faSortUp,\r\n  faSortDown,\r\n  faMoon,\r\n  faChevronRight,\r\n  faGlobe, */\r\n  faCaretRight\r\n);\r\n","import { BrowserRouter } from 'react-router-dom';\n\nimport FileManager from './container/fileManager/fileManager';\nimport \"./components/FontawsomeIcons\"\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div style={{textAlign: 'center'}}>\n          <h1>\n            React File Maanger\n          </h1>\n        </div>\n        <FileManager />\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from './action';\r\n\r\nconst initialState={\r\n    root: [{\r\n        parent: null,\r\n        path: \"root\",\r\n        name: \"root\",\r\n        type: \"application/directory\",\r\n        dirCount: 3,\r\n        fileCount: 1,\r\n        children: [\r\n            {\r\n                parent: \"root\",\r\n                path: \"root/folder1\",\r\n                name: \"folder1\",\r\n                type: \"application/directory\",\r\n                dirCount: 1,\r\n                fileCount: 1,\r\n                children: [\r\n                    {\r\n                        parent: \"root/folder1\",\r\n                        path: \"root/folder1/folder1\",\r\n                        name: \"folder1\",\r\n                        type: \"application/directory\",\r\n                        dirCount: 0,\r\n                        fileCount: 0,\r\n                        children: []\r\n                    },\r\n                    {\r\n                        parent: \"root/folder1\",\r\n                        type: \"application/file\",\r\n                        name: \"file1.txt\",\r\n                        path: \"root/folder1/file1.txt\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                parent: \"root\",\r\n                path: \"root/folder2\",\r\n                name: \"folder2\",\r\n                type: \"application/directory\",\r\n                dirCount: 0,\r\n                fileCount: 2,\r\n                children: [\r\n                    {\r\n                        parent: \"root/folder2\",\r\n                        type: \"application/file\",\r\n                        name: \"file1.txt\",\r\n                        path: \"root/folder2/file1.txt\"\r\n                    },\r\n                    {\r\n                        parent: \"root/folder2\",\r\n                        type: \"application/file\",\r\n                        name: \"file2.txt\",\r\n                        path: \"root/folder2/file2.txt\"\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                parent: \"root\",\r\n                path: \"root/folder3\",\r\n                name: \"folder3\",\r\n                type: \"application/directory\",\r\n                dirCount: 0,\r\n                fileCount: 1,\r\n                children: [\r\n                    {\r\n                        parent: \"root/folder3\",\r\n                        type: \"application/file\",\r\n                        name: \"file1.txt\",\r\n                        path: \"root/folder3/file1.txt\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                parent: \"root\",\r\n                type: \"application/file\",\r\n                name: \"file1.txt\",\r\n                path: \"root/file1.txt\"\r\n            }\r\n        ]\r\n    }],\r\n    selectedPath: null,\r\n    selectedPathParent: null,\r\n    selectedPathType: null,\r\n    selectedPathDirCount: null,\r\n    selectedPathFileCount: null,\r\n    addItem: {\r\n        type: null,\r\n        target: null,\r\n        renameItem: false\r\n    },\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.SELECTPATH:\r\n            console.log(\"SelectPath triggered\")\r\n            {\r\n                const pathKeys=action.value.path.split(\"/\").slice(1);\r\n            let selectedContent = null;\r\n            let i=0;\r\n            function selectPath(child){\r\n                if(action.value.path === child.path || action.value.path === state.root[0].path){\r\n                    if(action.value.pathType === 'application/directory'){\r\n                        selectedContent = [...child.children]\r\n                    }\r\n                    else if(action.value.pathType === 'application/directory'){\r\n                        selectedContent = {downloadOption: true}\r\n                    }\r\n                }\r\n                else if(child.children){\r\n                    let index = child.children.findIndex(ele => ele.name === pathKeys[i])\r\n                    i++\r\n                    selectPath(child.children[index])\r\n                }\r\n            }\r\n            action.value.expand && selectPath(state.root[0])\r\n            console.log(selectedContent)\r\n            return action.value.expand ? {\r\n                ...state,\r\n                selectedPath: action.value.path,\r\n                selectedPathParent: action.value.pathParent,\r\n                selectedPathType: action.value.pathType,\r\n                selectedPathDirCount: action.value.dirCount,\r\n                selectedPathFileCount: action.value.fileCount,\r\n                selectedContent: selectedContent,\r\n                selectedFrom: action.value.origin,\r\n                searchResult: null\r\n            } : {\r\n                ...state,\r\n                selectedPath: action.value.path,\r\n                selectedPathParent: action.value.pathParent,\r\n                selectedPathType: action.value.pathType,\r\n                selectedPathDirCount: action.value.dirCount,\r\n                selectedPathFileCount: action.value.fileCount,\r\n                selectedFrom: action.value.origin,\r\n                searchResult: null\r\n            }\r\n        }\r\n        case actionTypes.DELETEITEM:\r\n            console.log(\"DeleteItem triggered\")\r\n            {\r\n                const pathKeys=state.selectedPath.split(\"/\").slice(1);\r\n            let item=JSON.parse(JSON.stringify(state.root))\r\n            let selectedContent = null;\r\n            let length=pathKeys.length\r\n            let i=0;\r\n            function deleteItem(child){\r\n                if(i === length-1){\r\n                    child.children=child.children.filter(ele => ele.path !== state.selectedPath)\r\n                    selectedContent=[...child.children]\r\n                }\r\n                else if(child.children){\r\n                    let index = child.children.findIndex(ele => ele.name === pathKeys[i])\r\n                    i++\r\n                    deleteItem(child.children[index])\r\n                }\r\n            }\r\n            deleteItem(item[0])\r\n            return {\r\n                ...state,\r\n                root: item,\r\n                selectedPath: null,\r\n                selectedPathParent: null,\r\n                selectedPathType: null,\r\n                selectedPathDirCount: null,\r\n                selectedPathFileCount: null,\r\n                selectedContent: selectedContent\r\n            }\r\n            }\r\n            \r\n        case actionTypes.ADDITEM:\r\n            console.log(\"AddItem triggered\")\r\n            if(state.selectedPathType){\r\n                let targetFolder = state.selectedPathType === \"application/directory\" ? state.selectedPath : state.selectedPathParent;\r\n                let inputValue = null;\r\n                if(action.value === 'application/directory'){\r\n                    inputValue=`folder${state.selectedPathDirCount + 1}`\r\n                }\r\n                else if(action.value === \"application/file\"){\r\n                    inputValue=`file${state.selectedPathFileCount + 1}.txt`\r\n                }\r\n                return{\r\n                    ...state,\r\n                    addItem: {type: action.value, target: targetFolder, inputValue: inputValue}\r\n                }\r\n            }\r\n            break\r\n        case actionTypes.SAVEITEM:\r\n            console.log(\"SaveItem triggered\")\r\n            let updateItem=JSON.parse(JSON.stringify(state.root))\r\n            const pathKey=state.selectedPath.split(\"/\").slice(1);\r\n            // console.log(pathKey)\r\n            let dirCount = state.selectedPathDirCount;\r\n            let fileCount = state.selectedPathFileCount;\r\n            let renameItem = state.addItem.renameItem;\r\n            let selectedPath = null;\r\n            let duplicateError = null;\r\n            let selectedContent = null;\r\n            let j=0\r\n            function saveItem(child){\r\n                // console.log(child)\r\n                // console.log(state.addItem.target)\r\n                if(state.addItem.target === child.path || state.selectedPath === state.root[0].path || (renameItem && (state.selectedPath === state.root[0].path || state.selectedPathParent === child.path))){\r\n                    let index = child.children.findIndex( ele => ele.name === action.value.name && ele.type === state.addItem.type)\r\n                    duplicateError = index >=0 ? `${action.value.name} already present in this folder` : null;\r\n                    if(!duplicateError){\r\n                        if(state.addItem.renameItem){\r\n                            let index = child.children.findIndex(ele => ele.path === state.selectedPath)\r\n                            child.children[index].name = action.value.name\r\n                            child.children[index].path = child.path + \"/\" + action.value.name\r\n                            selectedPath = child.children[index].path\r\n                        }\r\n                        else{\r\n                            if(state.addItem.type === \"application/directory\"){\r\n                                child.children=child.children.concat({\r\n                                    parent: child.path,\r\n                                    path: child.path + \"/\" + action.value.name,\r\n                                    name: action.value.name,\r\n                                    type: state.addItem.type,\r\n                                    dirCount: 0,\r\n                                    fileCount: 0,\r\n                                    children: []\r\n                                })\r\n                                child.dirCount = child.dirCount + 1\r\n                                dirCount = child.dirCount\r\n                            }\r\n                            else{\r\n                                child.children=child.children.concat({\r\n                                    parent: child.path,\r\n                                    type: state.addItem.type,\r\n                                    name: action.value.name,\r\n                                    path: child.path + \"/\" + action.value.name,\r\n                                    date: action.value.choosenFile.data\r\n                                })\r\n                                child.fileCount = child.fileCount + 1\r\n                                fileCount = child.fileCount\r\n                            }\r\n                        }\r\n                    \r\n                    child.children.sort((a,b) => {\r\n                        return a.type === b.type ? (a.name > b.name ? 1 : -1) : (a.type > b.type ? 1 : -1)\r\n                    })\r\n                    selectedContent=[...child.children]\r\n                }}\r\n                else if(child.children){\r\n                    let index = child.children.findIndex(ele => ele.name === pathKey[j])\r\n                    j++\r\n                    saveItem(child.children[index])\r\n                }\r\n            }\r\n            saveItem(updateItem[0])\r\n            return !duplicateError ? {\r\n                ...state,\r\n                root: updateItem,\r\n                addItem: {\r\n                    type: null,\r\n                    target: null,\r\n                    error: duplicateError\r\n                },\r\n                selectedPath: selectedPath ? selectedPath : state.selectedPath,\r\n                selectedPathDirCount: dirCount,\r\n                selectedPathFileCount: fileCount,\r\n                selectedContent: selectedContent\r\n            } : {\r\n                ...state,\r\n                addItem: {\r\n                    ...state.addItem,\r\n                    error: duplicateError\r\n                },\r\n            }\r\n        case actionTypes.CANCELITEM:\r\n            console.log(\"CancelItem triggered\")\r\n            return{\r\n                ...state,\r\n                addItem: {\r\n                    type: null,\r\n                    target: null,\r\n                    renameItem: false\r\n                }\r\n            }\r\n        case actionTypes.RENAMEITEM:\r\n            return{\r\n                ...state,\r\n                addItem: {\r\n                    ...state.addItem,\r\n                    type: action.value,\r\n                    renameItem: true,\r\n                    error: null\r\n                }\r\n            }\r\n        case actionTypes.SEARCHITEMS:\r\n            console.log(action.type, \"triggered\", action.value);\r\n            {\r\n                let searchResult = []\r\n                function searchItem(child){\r\n                    if(child.name.toLowerCase().indexOf(action.value) >= 0){\r\n                        searchResult.push(child)\r\n                    }\r\n                    if(child.children){\r\n                        child.children.forEach(element => {\r\n                            searchItem(element)\r\n                        });\r\n                    }\r\n                }\r\n                searchItem(state.root[0])\r\n                console.log(searchResult)\r\n                return{\r\n                    ...state,\r\n                    selectedContent: null,\r\n                    searchResult: searchResult\r\n                }\r\n            }\r\n        default:\r\n            break\r\n    }\r\n    return state\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}